prefix: 2020/10/18 19:40:29 ServiceLog has created
prefix: 2020/10/18 19:40:36 {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 19:40:36 "This user already exists. Please check your User Name and Email"
prefix: 2020/10/18 19:47:12 ServiceLog has created
prefix: 2020/10/18 19:47:29 POST {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 19:47:29 {"isSuccess":"Furkan"}
prefix: 2020/10/18 19:48:19 ServiceLog has created
prefix: 2020/10/18 19:48:26 /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 19:48:26 "This user already exists. Please check your User Name and Email"
prefix: 2020/10/18 20:11:56 ServiceLog has created
prefix: 2020/10/18 20:12:01 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 20:12:01 Response: "This user already exists. Please check your User Name and Email"
prefix: 2020/10/18 20:25:34 ServiceLog has created
prefix: 2020/10/18 20:25:41 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 20:25:41 Response: "This user already exists. Please check your User Name and Email"
prefix: 2020/10/18 20:30:48 ServiceLog has created
prefix: 2020/10/18 20:30:54 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 20:30:54 Response: "This user already exists. Please check your User Name and Email"
prefix: 2020/10/18 22:04:18 ServiceLog has created
prefix: 2020/10/18 22:04:41 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 22:04:41 Response: "This user already exists. Please check your User Name and Email"
prefix: 2020/10/18 22:04:59 ServiceLog has created
prefix: 2020/10/18 22:05:17 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 22:05:17 Response: "This user already exists. Please check your User Name and Email"
prefix: 2020/10/18 22:06:22 ServiceLog has created
prefix: 2020/10/18 22:06:30 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/18 22:06:30 Response: "This user already exists. Please check your User Name and Email"
prefix: 2020/10/19 21:33:51 ServiceLog has created
prefix: 2020/10/19 21:33:59 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/19 21:33:59 Response: "This user already exists. Please check your User Name and Email"
prefix: 2020/10/19 21:34:40 Request: /login/login {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/19 21:34:40 Response: {"isSuccess":""}
prefix: 2020/10/19 21:58:15 ServiceLog has created
prefix: 2020/10/19 22:05:20 ServiceLog has created
prefix: 2020/10/19 22:05:46 Request: / 
prefix: 2020/10/19 22:05:46 Response: 
prefix: 2020/10/19 22:05:46 Request: /favicon.ico 
prefix: 2020/10/19 22:05:46 Response: 
prefix: 2020/10/19 22:05:58 Request: / {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/19 22:05:58 Response: 
prefix: 2020/10/19 22:09:41 Request: /ws {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/19 22:09:41 Response: Bad Request

prefix: 2020/10/19 22:09:43 Request: / {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/19 22:09:43 Response: 
prefix: 2020/10/19 22:09:44 Request: / {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/19 22:09:44 Response: 
prefix: 2020/10/19 22:09:45 Request: / {
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}
prefix: 2020/10/19 22:09:45 Response: 
prefix: 2020/10/19 22:18:57 ServiceLog has created
prefix: 2020/10/19 22:20:00 ServiceLog has created
prefix: 2020/10/19 22:24:35 ServiceLog has created
prefix: 2020/10/19 22:29:41 ServiceLog has created
prefix: 2020/10/19 22:31:24 ServiceLog has created
prefix: 2020/10/19 22:41:25 ServiceLog has created
prefix: 2020/10/19 22:45:41 ServiceLog has created
prefix: 2020/10/19 22:52:10 ServiceLog has created
prefix: 2020/10/19 23:41:03 ServiceLog has created
prefix: 2020/10/19 23:42:43 ServiceLog has created
prefix: 2020/10/19 23:45:37 ServiceLog has created
prefix: 2020/10/19 23:47:05 ServiceLog has created
prefix: 2020/10/19 23:47:56 ServiceLog has created
prefix: 2020/10/19 23:48:20 ServiceLog has created
prefix: 2020/10/19 23:49:26 ServiceLog has created
prefix: 2020/10/19 23:50:52 ServiceLog has created
prefix: 2020/10/19 23:52:15 ServiceLog has created
prefix: 2020/10/19 23:56:07 ServiceLog has created
prefix: 2020/10/19 23:56:15 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/19 23:56:15 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/19 23:56:38 ServiceLog has created
prefix: 2020/10/19 23:56:44 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/19 23:56:44 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/19 23:57:16 ServiceLog has created
prefix: 2020/10/19 23:58:14 ServiceLog has created
prefix: 2020/10/19 23:58:44 ServiceLog has created
prefix: 2020/10/19 23:59:27 ServiceLog has created
prefix: 2020/10/20 00:00:21 ServiceLog has created
prefix: 2020/10/20 00:00:37 ServiceLog has created
prefix: 2020/10/20 00:03:19 ServiceLog has created
prefix: 2020/10/20 00:03:25 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 00:03:25 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/20 00:04:22 ServiceLog has created
prefix: 2020/10/20 00:05:58 ServiceLog has created
prefix: 2020/10/20 00:06:03 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 00:06:03 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/20 00:07:50 ServiceLog has created
prefix: 2020/10/20 00:07:56 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 00:07:56 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/20 00:12:23 ServiceLog has created
prefix: 2020/10/20 00:12:28 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 00:12:28 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/20 00:14:34 ServiceLog has created
prefix: 2020/10/20 00:14:45 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 00:14:45 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/20 22:10:10 ServiceLog has created
prefix: 2020/10/20 22:10:45 [Request:  /socket   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:11:09 [Request:  /socket   ]
prefix: 2020/10/20 22:11:32 ServiceLog has created
prefix: 2020/10/20 22:11:37 [Request:  /socket/send   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:13:19 ServiceLog has created
prefix: 2020/10/20 22:13:26 [Request:  /socket/send   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:14:06 ServiceLog has created
prefix: 2020/10/20 22:14:12 [Request:  /socket/send   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:14:20 [Response:  "OK"]
prefix: 2020/10/20 22:14:28 [Request:  /socket   ]
prefix: 2020/10/20 22:15:10 [Request:  /socket/show   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:15:10 [Response:  ]
prefix: 2020/10/20 22:15:18 [Request:  /socket/show   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:15:18 [Response:  ]
prefix: 2020/10/20 22:15:24 [Request:  /socket/show   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:16:58 ServiceLog has created
prefix: 2020/10/20 22:17:32 [Request:  /socket   ]
prefix: 2020/10/20 22:17:36 [Request:  /socket/send   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:17:36 [Response:  "OK"]
prefix: 2020/10/20 22:17:42 [Request:  /socket/show   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 22:17:59 [Request:  /   ]
prefix: 2020/10/20 22:17:59 [Response:  ]
prefix: 2020/10/20 22:17:59 [Request:  /favicon.ico   ]
prefix: 2020/10/20 22:17:59 [Response:  ]
prefix: 2020/10/20 22:30:57 ServiceLog has created
prefix: 2020/10/20 22:31:57 ServiceLog has created
prefix: 2020/10/20 23:00:49 ServiceLog has created
prefix: 2020/10/20 23:01:06 [Request:  /room/1   ]
prefix: 2020/10/20 23:01:06 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:01:06 [Request:  /ws/1   ]
prefix: 2020/10/20 23:01:06 [Response:  ]
prefix: 2020/10/20 23:01:32 [Request:  /room/1   ]
prefix: 2020/10/20 23:01:32 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:01:32 [Request:  /ws/1   ]
prefix: 2020/10/20 23:01:32 [Response:  ]
prefix: 2020/10/20 23:02:37 [Request:  /room/1   ]
prefix: 2020/10/20 23:02:37 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:02:37 [Request:  /ws/1   ]
prefix: 2020/10/20 23:02:37 [Response:  ]
prefix: 2020/10/20 23:02:48 [Request:  /room/1   ]
prefix: 2020/10/20 23:02:48 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:02:48 [Request:  /ws/1   ]
prefix: 2020/10/20 23:02:48 [Response:  ]
prefix: 2020/10/20 23:02:57 [Request:  /room/1   ]
prefix: 2020/10/20 23:02:57 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:02:57 [Request:  /ws/1   ]
prefix: 2020/10/20 23:02:57 [Response:  ]
prefix: 2020/10/20 23:03:04 [Request:  /room/1   ]
prefix: 2020/10/20 23:03:04 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:03:04 [Request:  /ws/1   ]
prefix: 2020/10/20 23:03:04 [Response:  ]
prefix: 2020/10/20 23:03:21 [Request:  /room/2   ]
prefix: 2020/10/20 23:03:21 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:03:21 [Request:  /ws/2   ]
prefix: 2020/10/20 23:03:21 [Response:  ]
prefix: 2020/10/20 23:03:30 [Request:  /room/2   ]
prefix: 2020/10/20 23:03:30 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:03:30 [Request:  /ws/2   ]
prefix: 2020/10/20 23:03:30 [Response:  ]
prefix: 2020/10/20 23:03:51 [Request:  /room/3   ]
prefix: 2020/10/20 23:03:51 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:03:51 [Request:  /ws/3   ]
prefix: 2020/10/20 23:03:51 [Response:  ]
prefix: 2020/10/20 23:03:59 [Request:  /room/1   ]
prefix: 2020/10/20 23:03:59 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:03:59 [Request:  /ws/1   ]
prefix: 2020/10/20 23:03:59 [Response:  ]
prefix: 2020/10/20 23:04:02 [Request:  /room/3   ]
prefix: 2020/10/20 23:04:02 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:04:02 [Request:  /ws/3   ]
prefix: 2020/10/20 23:04:02 [Response:  ]
prefix: 2020/10/20 23:04:10 [Request:  /room/3   ]
prefix: 2020/10/20 23:04:10 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:04:10 [Request:  /ws/3   ]
prefix: 2020/10/20 23:04:10 [Response:  ]
prefix: 2020/10/20 23:10:23 ServiceLog has created
prefix: 2020/10/20 23:10:35 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 23:10:35 [Response:  ]
prefix: 2020/10/20 23:10:40 [Request:  /login/login   ""{
    "username":"Furkan",
    "email":"asda",
    "password":"asd"
}""]
prefix: 2020/10/20 23:10:40 [Response:  {"Value":"string","Type":{},"Offset":2,"Struct":"","Field":""}]
prefix: 2020/10/20 23:10:47 [Request:  /room/1   ]
prefix: 2020/10/20 23:10:47 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:10:47 [Request:  /ws/1   ]
prefix: 2020/10/20 23:10:47 [Response:  ]
prefix: 2020/10/20 23:10:52 [Request:  /room/1   ]
prefix: 2020/10/20 23:10:52 [Response:  <!DOCTYPE html>
<html lang="en">
<head>
    <title>Chat Example</title>
    <script type="text/javascript">
        window.onload = function () {
            let conn;
            let msg = document.getElementById("msg");
            let log = document.getElementById("log");

            function appendLog(item) {
                let doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
                log.appendChild(item);
                if (doScroll) {
                    log.scrollTop = log.scrollHeight - log.clientHeight;
                }
            }

            document.getElementById("form").onsubmit = function () {
                if (!conn) {
                    return false;
                }
                if (!msg.value) {
                    return false;
                }
                conn.send(msg.value);
                msg.value = "";
                return false;
            };

            if (window["WebSocket"]) {
                const params = window.location.href.split("/");
                const roomId = params[params.length - 1];
                conn = new WebSocket("ws://" + document.location.host + "/ws/" + roomId);
                conn.onclose = function (evt) {
                    let item = document.createElement("div");
                    item.innerHTML = "<b>Connection closed.</b>";
                    appendLog(item);
                };
                conn.onmessage = function (evt) {
                    let messages = evt.data.split('\n');
                    for (let i = 0; i < messages.length; i++) {
                        let item = document.createElement("div");
                        item.innerText = messages[i];
                        appendLog(item);
                    }
                };
            } else {
                let item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
            }
        };
    </script>
    <style type="text/css">
        html {
            overflow: hidden;
        }

        body {
            overflow: hidden;
            padding: 0;
            margin: 0;
            width: 100%;
            height: 100%;
            background: gray;
        }

        #log {
            background: white;
            margin: 0;
            padding: 0.5em 0.5em 0.5em 0.5em;
            position: absolute;
            top: 0.5em;
            left: 0.5em;
            right: 0.5em;
            bottom: 3em;
            overflow: auto;
        }

        #form {
            padding: 0 0.5em 0 0.5em;
            margin: 0;
            position: absolute;
            bottom: 1em;
            left: 0px;
            width: 100%;
            overflow: hidden;
        }

    </style>
</head>
<body>
<div id="log"></div>
<form id="form">
    <input type="text" id="msg" size="64" autofocus/>
    <input type="submit" value="Send"/>
</form>
</body>
</html>]
prefix: 2020/10/20 23:10:52 [Request:  /ws/1   ]
prefix: 2020/10/20 23:10:52 [Response:  ]
